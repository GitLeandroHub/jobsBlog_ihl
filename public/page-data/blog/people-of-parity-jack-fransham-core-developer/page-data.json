{"componentChunkName":"component---src-components-templates-blog-template-tsx","path":"/blog/people-of-parity-jack-fransham-core-developer/","result":{"data":{"mdx":{"frontmatter":{"author":"Alexandra Heller","date_published":"February 15, 2019","image":"/images/people-of-parity-jack2.jpeg","slug":"blog/people-of-parity-jack-fransham-core-developer/","tags":["People of Parity","Company and Culture","Rust","Wasm"],"blogTitle":"People of Parity: Jack Fransham, Core Developer"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"index\",\n  \"tags\": [\"People of Parity\", \"Company and Culture\", \"Rust\", \"Wasm\"],\n  \"author\": \"Alexandra Heller\",\n  \"blogTitle\": \"People of Parity: Jack Fransham, Core Developer\",\n  \"slug\": \"blog/people-of-parity-jack-fransham-core-developer/\",\n  \"date_published\": \"2019-02-15T05:00:00.000Z\",\n  \"image\": \"/images/people-of-parity-jack2.jpeg\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"InvisibleHandLab is made up of a large number of talented developers who are often as passionate about the technologies they build with as those they build. Jack Fransham falls into this category, being able to talk at length about the merits of the Rust programming language, WebAssembly (Wasm), and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://parity.io/substrate\"\n  }, \"Substrate\"), \".\"), mdx(\"p\", null, \"In the year and a half Jack has worked at Parity, he has worked on a number of projects, including \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/paritytech/wasmi\"\n  }, \"Wasmi\"), \", Parity\\u2019s Wasm interpreter; the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/paritytech/fleetwood\"\n  }, \"\\u201CFleetwood\\u201D eDSL library\"), \" for writing safe smart contracts in Rust; EVM optimization; hashing algorithms; and now the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/CraneStation/lightbeam\"\n  }, \"Lightbeam Wasm compiler\"), \".\"), mdx(\"p\", null, \"Jack\\u2019s offbeat and occasionally morbid sense of humor can be witnessed in his writing. For example, when explaining Substrate\\u2019s forkless upgrades, he \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/polkadot-network/never-fork-again-438c5e985cd8\"\n  }, \"likens blockchain forks to replacing a family dog\"), \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"There\\u2019s no way to actually \\u201Cupgrade\\u201D a blockchain in the traditional sense, only create a new blockchain that retains the old one\\u2019s history. Like if you replace your dead dog with another of the same breed and you call it the same name for the sake of the kids. Except in this case the original dog isn\\u2019t dead, and also I guess the new dog has all the memories of the original dog surgically implanted into its brain somehow.\")), mdx(\"p\", null, \"I sat down with Jack to chat about writing smart contracts in Rust, what\\u2019s remarkable about WebAssembly, what it\\u2019s like working at Parity, and life in Berlin.\"), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Like most Parity developers, you\\u2019re a big\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://parity.io/why-rust\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Rust\")), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fan. What made you fall in love with the programming language?\"), \"  \"), mdx(\"p\", null, \"The fact that, for the first time, I could write code that looked like what I was used to in a language like Python or C# but with the ability to visualize the assembly that it compiles down to. Maybe not the exact instructions, but you can at least work out the flow and use that to optimism your program effectively without resorting to memory-unsafe languages or constructs. C++ has this ability too, but I didn\\u2019t have a spare decade to learn it.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You\\u2019ve made the case for\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://troubles.md/posts/why-write-smart-contracts-in-rust/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"writing smart contracts in Rust\")), mdx(\"strong\", {\n    parentName: \"p\"\n  }, \". Why should someone consider writing smart contracts in Rust?\"), \"  \"), mdx(\"p\", null, \"Well, my first answer will always be because Rust is a fantastic language in general, but it\\u2019s also very well-tailored to blockchain use-cases specifically. Many of the constraints that you get on the blockchain are identical to those found in high-reliability embedded systems\\u2014small code-size, excellent security, high reliability, and minimal resource use. One of Rust\\u2019s design goals is to target high-reliability embedded systems and we can piggyback off that work to have a well-designed language that is also designed for the blockchain as a side effect. This isn\\u2019t to mention the fact that it already has a world-class optimizing compiler that produces Wasm, which as mentioned is an excellent VM ISA for the blockchain.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You write a lot about WebAssembly (Wasm)\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://troubles.md/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"on your blog\")), mdx(\"strong\", {\n    parentName: \"p\"\n  }, \". What interests you about Wasm?\")), mdx(\"p\", null, \"I\\u2019ve always been fascinated by virtual machines and language design, but WebAssembly is truly something new. It\\u2019s the first virtual machine that\\u2019s designed to be as easily-compilable to assembly as possible while also having the kind of deterministic, safe and well-defined semantics you\\u2019d expect from a higher-level VM ISA. It\\u2019s certainly got problems, but even if in ten years no one\\u2019s using Wasm, the ideas that it brought to the table are still a real turning point in application security and virtual machine design.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You seem to also be a\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://parity.io/substrate\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Substrate\")), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fan. What\\u2019s your favorite aspect of Substrate?\")), mdx(\"p\", null, \"Without a doubt the runtime upgrade mechanism. No blockchain to my knowledge had ever been upgraded before the first Polkadot runtime upgrade\\u2014they were always simply forked. There\\u2019s probably a computer in a cupboard somewhere still mining Bitcoin v0.1; that simply can\\u2019t be true with Substrate\\u2019s upgrade mechanism as long as the network doesn\\u2019t get partitioned. This means that the design of Polkadot and other Substrate chains can be iterated a lot faster without every update being a huge deal like in Ethereum.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What are you working on right now?\")), mdx(\"p\", null, \"An \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/CraneStation/lightbeam\"\n  }, \"optimising linear-time compiler for WebAssembly\"), \". We want to be able to produce native code for Wasm so we can get maximum performance, but traditional compilers are basically impossible to write without allowing so-called \\u201Ccompiler bombs\\u201D - pieces of code that you can send to the compiler that cause it to take an extremely long amount of time. I\\u2019m building a compiler that produces high-quality native code while also being immune to compiler bombs.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What do you like about working at Parity?\")), mdx(\"p\", null, \"The fact that many of the projects that Parity needs people to work on are projects that I totally would have worked on in my spare time anyway. There\\u2019s such a wide variety of work that needs to be done and a large amount of it is interesting and enjoyable. Also, the freedom to work from home when I want to - I like working in an office but no office can compete with the ability to play my own music over my speaker system.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Like many Parity developers, you live in Berlin. What do you enjoy about the city?\")), mdx(\"p\", null, \"The feeling of being part of a community that the nightlife here gives you. When you go on a night out, for the most part people are respectful and friendly and when they\\u2019re not, people do actually call them out. You see many of the same faces if you go out a lot. Even if you\\u2019re not friends with all of them, you at least recognize them. The techno scene is small enough that you feel like a part of something but big enough that there\\u2019s always something to do.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Stay tuned for more \\u201CPeople of Parity.\\u201D \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://invisiblehandlab.kinera.network/newsletter/\"\n  }, \"Join the newsletter\"), \" to be informed of new articles, tech releases, and events.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":4,"excerpt":"InvisibleHandLab is made up of a large number of talented developers who are often as passionate about the technologies they build with…"},"allMdx":{"edges":[{"node":{"frontmatter":{"blogTitle":"We just released ink! 4.0!","date_published":"February 08, 2023","image":"/images/qsdh5p9.jpeg","slug":"we-just-released-ink-4-0"}}},{"node":{"frontmatter":{"blogTitle":"Parity Leadership Update","date_published":"October 21, 2022","image":"/images/blog-post.png","slug":"blog/parity-leadership-update/"}}},{"node":{"frontmatter":{"blogTitle":"Transitioning Parity Ethereum to OpenEthereum DAO","date_published":"December 16, 2019","image":"/images/parity-ethereum-openethereum.jpeg","slug":"blog/parity-ethereum-openethereum-dao/"}}}]}},"pageContext":{"slug":"blog/people-of-parity-jack-fransham-core-developer/","locale":"en","hrefLang":"en-US","originalPath":"/blog/people-of-parity-jack-fransham-core-developer/","dateFormat":"MM/DD/YYYY"}},"staticQueryHashes":["1239077767","1247656359","3280999885","3280999885","4123762078","4185913137","607815487","607815487"]}